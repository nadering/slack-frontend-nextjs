"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { RecoilRoot } from "recoil";
import { QueryClient, QueryClientProvider } from "react-query";
import { Amplify, I18n } from "aws-amplify";
import { Authenticator, translations } from "@aws-amplify/ui-react";
import { AwsConfig, AwsKoVocabularies } from "./_auth";
import "./globals.scss";
import "./fonts.scss";
import "adorable-css";
import "@aws-amplify/ui-react/styles.css";

Amplify.configure({ ...AwsConfig, ssr: true });
I18n.putVocabularies(translations);
I18n.setLanguage("ko");
I18n.putVocabulariesForLanguage("ko", AwsKoVocabularies);

const inter = Inter({ subsets: ["latin"] });
const queryClient = new QueryClient();

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: "/images/slack_icon.svg",
  },
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <RecoilRoot>
      <QueryClientProvider client={queryClient}>
        <Authenticator.Provider>
          <html lang="ko">
            <head>
              <title>Slack Clone-Coding</title>
              <meta
                name="description"
                content="Slack Clone-Coding with React / Spring"
              />
              <link rel="icon" href="/images/slack_icon.svg" />
            </head>
            <body className={inter.className}>
              <div className="app" data-theme="light">
                <Authenticator
                  initialState="signIn"
                  signUpAttributes={["email"]}
                  socialProviders={["google"]}
                  variation="modal"
                  formFields={{
                    signUp: {
                      username: {
                        order: 1,
                      },
                      email: {
                        order: 2,
                      },
                      password: {
                        order: 3,
                      },
                      confirm_password: {
                        order: 4,
                      },
                    },
                  }}
                >
                  {children}
                </Authenticator>
              </div>
            </body>
          </html>
        </Authenticator.Provider>
      </QueryClientProvider>
    </RecoilRoot>
  );
}
